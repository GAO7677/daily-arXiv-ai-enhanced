{"id": "2506.10021", "categories": ["cs.PL", "cs.AI"], "pdf": "https://arxiv.org/pdf/2506.10021", "abs": "https://arxiv.org/abs/2506.10021", "authors": ["Jordi de la Torre"], "title": "From Tool Calling to Symbolic Thinking: LLMs in a Persistent Lisp Metaprogramming Loop", "comment": null, "summary": "We propose a novel architecture for integrating large language models (LLMs)\nwith a persistent, interactive Lisp environment. This setup enables LLMs to\ndefine, invoke, and evolve their own tools through programmatic interaction\nwith a live REPL. By embedding Lisp expressions within generation and\nintercepting them via a middleware layer, the system allows for stateful\nexternal memory, reflective programming, and dynamic tool creation. We present\na design framework and architectural principles to guide future implementations\nof interactive AI systems that integrate symbolic programming with neural\nlanguage generation.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u5c06\u5927\u8bed\u8a00\u6a21\u578b\u4e0eLisp REPL\u73af\u5883\u6df1\u5ea6\u96c6\u6210\u7684\u65b0\u67b6\u6784\uff0c\u4f7f\u6a21\u578b\u53ef\u52a8\u6001\u751f\u6210\u548c\u8fdb\u5316\u5de5\u5177\uff0c\u5e76\u63d0\u51fa\u4e86\u672a\u6765\u4ea4\u4e92\u5f0fAI\u7cfb\u7edf\u7684\u8bbe\u8ba1\u539f\u5219\u3002", "motivation": "\u5f53\u524d\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728\u4e0e\u5916\u90e8\u73af\u5883\u4ea4\u4e92\u53ca\u5de5\u5177\u751f\u6210\u65b9\u9762\u5b58\u5728\u5c40\u9650\uff0c\u4e9f\u9700\u5f00\u53d1\u80fd\u591f\u652f\u6301\u52a8\u6001\u5de5\u5177\u6784\u5efa\u3001\u72b6\u6001\u8bb0\u5fc6\u53ca\u4ea4\u4e92\u7684\u67b6\u6784\u3002", "method": "\u63d0\u51fa\u4e00\u79cd\u65b0\u9896\u67b6\u6784\uff0c\u5c06\u5927\u8bed\u8a00\u6a21\u578b\u4e0e\u6301\u4e45\u7684\u4ea4\u4e92\u5f0fLisp\u73af\u5883\u96c6\u6210\u3002\u901a\u8fc7\u5728\u751f\u6210\u8fc7\u7a0b\u4e2d\u5d4c\u5165Lisp\u8868\u8fbe\u5f0f\uff0c\u5e76\u5229\u7528\u4e2d\u95f4\u4ef6\u8fdb\u884c\u62e6\u622a\uff0c\u5b9e\u73b0REPL\u7684\u7a0b\u5e8f\u5316\u4ea4\u4e92\u3002\u7cfb\u7edf\u80fd\u591f\u4f7fLLM\u5b9a\u4e49\u3001\u8c03\u7528\u5e76\u8fdb\u5316\u81ea\u5df1\u7684\u5de5\u5177\u3002", "result": "\u7cfb\u7edf\u5b9e\u73b0\u4e86LLM\u4e0eLisp\u73af\u5883\u7684\u65e0\u7f1d\u96c6\u6210\uff0c\u652f\u6301\u6709\u72b6\u6001\u7684\u5916\u90e8\u8bb0\u5fc6\u3001\u53cd\u5c04\u5f0f\u7f16\u7a0b\u53ca\u52a8\u6001\u5de5\u5177\u521b\u9020\uff0c\u5e76\u63d0\u51fa\u4e86\u8bbe\u8ba1\u6846\u67b6\u4e0e\u67b6\u6784\u539f\u5219\uff0c\u4ee5\u6307\u5bfc\u672a\u6765\u7684\u4ea4\u4e92\u5f0fAI\u7cfb\u7edf\u5f00\u53d1\u3002", "conclusion": "\u672c\u7814\u7a76\u4e3a\u7b26\u53f7\u7f16\u7a0b\u4e0e\u795e\u7ecf\u8bed\u8a00\u751f\u6210\u7684\u878d\u5408\u63d0\u4f9b\u4e86\u5b9e\u73b0\u8303\u5f0f\uff0c\u4e3a\u6784\u5efa\u66f4\u5177\u4ea4\u4e92\u6027\u548c\u6269\u5c55\u6027\u7684AI\u7cfb\u7edf\u5960\u5b9a\u4e86\u57fa\u7840\u3002"}}
{"id": "2506.10026", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10026", "abs": "https://arxiv.org/abs/2506.10026", "authors": ["Tesla Zhang", "Sonya Simkin", "Rui Li", "Yue Yao", "Stephanie Balzer"], "title": "A Language-Agnostic Logical Relation for Message-Passing Protocols", "comment": "19 pages, 8 figures", "summary": "Today's computing landscape has been gradually shifting to applications\ntargeting distributed and *heterogeneous* systems, such as cloud computing and\nInternet of Things (IoT) applications. These applications are predominantly\n*concurrent*, employ *message-passing*, and interface with *foreign objects*,\nranging from externally implemented code to actual physical devices such as\nsensors. Verifying that the resulting systems adhere to the intended protocol\nof interaction is challenging -- the usual assumption of a common\nimplementation language, let alone a type system, no longer applies, ruling out\nany verification method based on them. This paper develops a framework for\ncertifying *protocol compliance* of heterogeneous message-passing systems. It\ncontributes the first mechanization of a *language-agnostic logical relation*,\nasserting that its inhabitants comply with the protocol specified. This\ndefinition relies entirely on a labelled transition-based semantics,\naccommodating arbitrary inhabitants, typed and untyped alike, including foreign\nobjects. As a case study, the paper considers two scenarios: (1) *per-instance\nverification* of a specific application or hardware device, and (2)\n*once-and-for-all verification* of well-typed applications for a given type\nsystem. The logical relation and both scenarios are mechanized in the Coq\ntheorem prover.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u903b\u8f91\u5173\u7cfb\u548c\u9a8c\u8bc1\u6846\u67b6\uff0c\u80fd\u591f\u5728\u6ca1\u6709\u7edf\u4e00\u5b9e\u73b0\u8bed\u8a00\u6216\u7c7b\u578b\u7cfb\u7edf\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba4\u8bc1\u5206\u5e03\u5f0f\u5f02\u6784\u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u7684\u534f\u8bae\u7b26\u5408\u6027\uff0c\u5e76\u5728Coq\u4e2d\u5b9e\u73b0\u3002", "motivation": "\u968f\u7740\u5206\u5e03\u5f0f\u548c\u5f02\u6784\u7cfb\u7edf\uff08\u5982\u4e91\u8ba1\u7b97\u548c\u7269\u8054\u7f51\uff09\u7684\u666e\u53ca\uff0c\u5e94\u7528\u7a0b\u5e8f\u8d8a\u6765\u8d8a\u591a\u5730\u91c7\u7528\u5e76\u53d1\u3001\u6d88\u606f\u4f20\u9012\u548c\u4e0e\u5916\u90e8\u5bf9\u8c61\uff08\u5982\u7269\u7406\u8bbe\u5907\u6216\u5916\u90e8\u4ee3\u7801\uff09\u7684\u4ea4\u4e92\u3002\u5982\u4f55\u9a8c\u8bc1\u8fd9\u4e9b\u7cfb\u7edf\u662f\u5426\u9075\u5faa\u9884\u671f\u7684\u4ea4\u4e92\u534f\u8bae\u6210\u4e3a\u4e00\u5927\u6311\u6218\uff0c\u56e0\u4e3a\u4f20\u7edf\u57fa\u4e8e\u7edf\u4e00\u7f16\u7a0b\u8bed\u8a00\u6216\u7c7b\u578b\u7cfb\u7edf\u7684\u65b9\u6cd5\u5df2\u4e0d\u9002\u7528\u3002", "method": "\u63d0\u51fa\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7528\u4e8e\u5206\u5e03\u5f0f\u5f02\u6784\u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u534f\u8bae\u7b26\u5408\u6027\u8ba4\u8bc1\u7684\u6846\u67b6\u3002\u8be5\u6846\u67b6\u57fa\u4e8e\u6807\u7b7e\u8f6c\u6362\u8bed\u4e49\uff0c\u53d1\u5c55\u51fa\u7b2c\u4e00\u4e2a\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u5e76\u5728Coq\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u5b9e\u73b0\u3002\u63d0\u4f9b\u4e86\u5bf9\u5177\u4f53\u5b9e\u4f8b\u548c\u7c7b\u578b\u7cfb\u7edf\u4e0b\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4e24\u79cd\u60c5\u666f\u9a8c\u8bc1\u65b9\u6848\u3002", "result": "\u6846\u67b6\u80fd\u591f\u9a8c\u8bc1\u5f02\u6784\u7cfb\u7edf\u4e2d\u7684\u534f\u8bae\u7b26\u5408\u6027\uff0c\u65e0\u9700\u4f9d\u8d56\u7edf\u4e00\u7684\u5b9e\u73b0\u8bed\u8a00\u6216\u7c7b\u578b\u7cfb\u7edf\uff0c\u5e76\u9002\u7528\u4e8e\u5305\u62ec\u5916\u90e8\u5bf9\u8c61\u5728\u5185\u7684\u5404\u7c7b\u5b9e\u73b0\u3002\u901a\u8fc7\u5728Coq\u4e2d\u673a\u5236\u5316\u903b\u8f91\u5173\u7cfb\uff0c\u6210\u529f\u5e94\u7528\u4e8e\u5b9e\u9645\u6848\u4f8b\uff0c\u5305\u62ec\u4e00\u6b21\u6027\u548c\u9010\u5b9e\u4f8b\u9a8c\u8bc1\u3002", "conclusion": "\u63d0\u51fa\u7684\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u903b\u8f91\u5173\u7cfb\u4ee5\u53ca\u57fa\u4e8e\u6807\u7b7e\u8f6c\u79fb\u7684\u6280\u672f\uff0c\u4e3a\u5f02\u6784\u6d88\u606f\u4f20\u9012\u7cfb\u7edf\u7684\u534f\u8bae\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u548c\u5b9e\u7528\u5de5\u5177\uff0c\u80fd\u591f\u63a8\u8fdb\u5206\u5e03\u5f0f\u53ca\u7269\u8054\u7f51\u5b89\u5168\u548c\u53ef\u9760\u6027\u7684\u53d1\u5c55\u3002"}}
{"id": "2506.10781", "categories": ["cs.PL", "68N15, 68U35", "D.3.0; K.3.2"], "pdf": "https://arxiv.org/pdf/2506.10781", "abs": "https://arxiv.org/abs/2506.10781", "authors": ["Zhiyao Zhong", "Cyrus Omar"], "title": "Hazel Deriver: A Live Editor for Constructing Rule-Based Derivations", "comment": "5 pages, 2 figures, includes a preliminary user study; intended for\n  computer science education and PL/HCI conference audiences", "summary": "Students in programming languages and formal logic courses often struggle\nwith constructing rule-based derivation trees due to the complexity of applying\ninference rules, the lack of immediate feedback, and the manual effort required\nfor handwritten proofs. We present Hazel Deriver, a live, web-based editor\ndesigned to scaffold derivation construction through multiple layers of\nsupport. Built on the Hazel live programming environment, it provides a\nstructured, interactive experience that encourages iterative exploration and\nreal-time feedback. A preliminary user study with former students suggests that\nHazel Deriver reduces the perceived difficulty of derivation tasks while\nimproving conceptual understanding and engagement. We discuss the design of its\nlayered scaffolding features and raise questions about balancing system\nguidance with learner autonomy.", "AI": {"tldr": "\u8be5\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5728\u7ebf\u7f16\u8f91\u5de5\u5177Hazel Deriver\uff0c\u901a\u8fc7\u5206\u5c42\u652f\u67b6\u652f\u6301\u548c\u5b9e\u65f6\u53cd\u9988\u5e2e\u52a9\u5b66\u751f\u66f4\u5bb9\u6613\u5730\u6784\u5efa\u63a8\u5bfc\u6811\u3002\u521d\u6b65\u7814\u7a76\u8868\u660e\uff0c\u5b83\u80fd\u964d\u4f4e\u96be\u5ea6\u5e76\u63d0\u5347\u7406\u89e3\u548c\u53c2\u4e0e\uff0c\u672a\u6765\u9700\u5173\u6ce8\u5f15\u5bfc\u4e0e\u81ea\u4e3b\u6027\u7684\u5e73\u8861\u3002", "motivation": "\u5b66\u751f\u5728\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u548c\u5f62\u5f0f\u903b\u8f91\u8bfe\u7a0b\u65f6\uff0c\u901a\u5e38\u96be\u4ee5\u6784\u5efa\u57fa\u4e8e\u89c4\u5219\u7684\u63a8\u5bfc\u6811\uff0c\u5176\u539f\u56e0\u5305\u62ec\u63a8\u7406\u89c4\u5219\u5e94\u7528\u590d\u6742\u3001\u7f3a\u4e4f\u5373\u65f6\u53cd\u9988\u4ee5\u53ca\u624b\u5199\u8bc1\u660e\u6240\u9700\u7684\u4eba\u5de5\u52b3\u52a8\u591a\u3002", "method": "\u63d0\u51fa\u4e86Hazel Deriver\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eHazel\u5b9e\u65f6\u7f16\u7a0b\u73af\u5883\u7684\u7f51\u9875\u7f16\u8f91\u5668\u3002\u8be5\u5de5\u5177\u901a\u8fc7\u591a\u5c42\u7ea7\u7684\u652f\u67b6\u652f\u6301\uff0c\u63d0\u4f9b\u7ed3\u6784\u5316\u3001\u4ea4\u4e92\u6027\u5f3a\u3001\u9f13\u52b1\u8fed\u4ee3\u63a2\u7d22\u548c\u5b9e\u65f6\u53cd\u9988\u7684\u63a8\u5bfc\u6811\u6784\u5efa\u4f53\u9a8c\u3002", "result": "\u521d\u6b65\u7528\u6237\u7814\u7a76\u663e\u793a\uff0cHazel Deriver\u80fd\u51cf\u5c11\u63a8\u5bfc\u4efb\u52a1\u7684\u4e3b\u89c2\u96be\u5ea6\uff0c\u540c\u65f6\u63d0\u5347\u5b66\u751f\u7684\u6982\u5ff5\u7406\u89e3\u548c\u53c2\u4e0e\u5ea6\u3002", "conclusion": "Hazel Deriver\u6709\u6548\u5e2e\u52a9\u5b66\u751f\u63d0\u9ad8\u4e86\u63a8\u5bfc\u6811\u7684\u6784\u5efa\u6548\u7387\u548c\u7406\u89e3\u7a0b\u5ea6\uff0c\u4f46\u5728\u7cfb\u7edf\u5f15\u5bfc\u4e0e\u5b66\u4e60\u8005\u81ea\u4e3b\u6027\u4e4b\u95f4\u7684\u5e73\u8861\u95ee\u9898\u4ecd\u9700\u8fdb\u4e00\u6b65\u63a2\u8ba8\u3002"}}
{"id": "2506.10913", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10913", "abs": "https://arxiv.org/abs/2506.10913", "authors": ["Ashley Samuelson", "Andrew K. Hirsch", "Ethan Cecchetti"], "title": "Choreographic Quick Changes: First-Class Location (Set) Polymorphism", "comment": "In submission to OOPSLA 2025", "summary": "Choreographic programming is a promising new paradigm for programming\nconcurrent systems where a developer writes a single centralized program that\ncompiles to individual programs for each node. Existing choreographic\nlanguages, however, lack critical features integral to modern systems, like the\nability of one node to dynamically compute who should perform a computation and\nsend that decision to others. This work addresses this gap with $\\lambda_{QC}$,\nthe first typed choreographic language with \\emph{first class process names}\nand polymorphism over both types and (sets of) locations. $\\lambda_{QC}$ also\nimproves expressive power over previous work by supporting algebraic and\nrecursive data types as well as multiply-located values. We formalize and\nmechanically verify our results in Rocq, including the standard choreographic\nguarantee of deadlock freedom.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u652f\u6301\u52a8\u6001\u8282\u70b9\u9009\u62e9\u4e0e\u4e30\u5bcc\u7c7b\u578b\u7279\u6027\u7684\u7f16\u821e\u8bed\u8a00\u03bb_{QC}\uff0c\u5728\u8868\u8fbe\u80fd\u529b\u4e0e\u7cfb\u7edf\u5b89\u5168\u6027\u65b9\u9762\u4f18\u4e8e\u4ee5\u5f80\u65b9\u6848\uff0c\u5e76\u7ecf\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u3002", "motivation": "\u73b0\u6709\u7684\u7f16\u821e\u7f16\u7a0b\u8bed\u8a00\u867d\u7136\u5f00\u8f9f\u4e86\u5e76\u53d1\u7cfb\u7edf\u7f16\u7a0b\u7684\u65b0\u8303\u5f0f\uff0c\u4f46\u7f3a\u4e4f\u73b0\u4ee3\u7cfb\u7edf\u5173\u952e\u7279\u6027\uff0c\u4f8b\u5982\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u9009\u62e9\u5e76\u901a\u77e5\u8d1f\u8d23\u7279\u5b9a\u8ba1\u7b97\u7684\u8282\u70b9\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u578b\u7684\u7c7b\u578b\u5316\u7f16\u821e\u8bed\u8a00\u03bb_{QC}\uff0c\u652f\u6301\u4e00\u7b49\u8fdb\u7a0b\u540d\u3001\u7c7b\u578b\u53ca\u4f4d\u7f6e\u591a\u6001\u6027\uff0c\u5e76\u80fd\u8868\u8fbe\u4ee3\u6570\u4e0e\u9012\u5f52\u6570\u636e\u7c7b\u578b\u53ca\u591a\u8282\u70b9\u503c\uff1b\u540c\u65f6\u7528Rocq\u5de5\u5177\u5bf9\u7406\u8bba\u7ed3\u679c\u548c\u65e0\u6b7b\u9501\u4fdd\u8bc1\u8fdb\u884c\u4e86\u5f62\u5f0f\u5316\u548c\u673a\u68b0\u5316\u9a8c\u8bc1\u3002", "result": "\u03bb_{QC}\u5728\u8868\u8fbe\u80fd\u529b\u4e0a\u8d85\u8d8a\u4e86\u65e2\u6709\u65b9\u6cd5\uff0c\u652f\u6301\u66f4\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u52a8\u6001\u5206\u914d\uff1b\u540c\u65f6\u7406\u8bba\u4e0a\u786e\u4fdd\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u4e0e\u65e0\u6b7b\u9501\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u901a\u8fc7\u03bb_{QC}\u5b8c\u5584\u4e86\u7f16\u821e\u7f16\u7a0b\u5728\u52a8\u6001\u8282\u70b9\u5206\u914d\u548c\u7c7b\u578b\u591a\u6837\u6027\u65b9\u9762\u7684\u4e0d\u8db3\uff0c\u63a8\u52a8\u4e86\u5206\u5e03\u5f0f\u5e76\u53d1\u7cfb\u7edf\u5b89\u5168\u3001\u9ad8\u6548\u5f00\u53d1\u3002"}}
{"id": "2506.10043", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10043", "abs": "https://arxiv.org/abs/2506.10043", "authors": ["Yongqian Sun", "Yu Luo", "Xidao Wen", "Yuan Yuan", "Xiaohui Nie", "Shenglin Zhang", "Tong Liu", "Xi Luo"], "title": "TrioXpert: An automated incident management framework for microservice system", "comment": null, "summary": "Automated incident management plays a pivotal role in large-scale\nmicroservice systems. However, many existing methods rely solely on\nsingle-modal data (e.g., metrics, logs, and traces) and struggle to\nsimultaneously address multiple downstream tasks, including anomaly detection\n(AD), failure triage (FT), and root cause localization (RCL). Moreover, the\nlack of clear reasoning evidence in current techniques often leads to\ninsufficient interpretability. To address these limitations, we propose\nTrioXpert, an end-to-end incident management framework capable of fully\nleveraging multimodal data. TrioXpert designs three independent data processing\npipelines based on the inherent characteristics of different modalities,\ncomprehensively characterizing the operational status of microservice systems\nfrom both numerical and textual dimensions. It employs a collaborative\nreasoning mechanism using large language models (LLMs) to simultaneously handle\nmultiple tasks while providing clear reasoning evidence to ensure strong\ninterpretability. We conducted extensive evaluations on two popular\nmicroservice system datasets, and the experimental results demonstrate that\nTrioXpert achieves outstanding performance in AD (improving by 4.7% to 57.7%),\nFT (improving by 2.1% to 40.6%), and RCL (improving by 1.6% to 163.1%) tasks.", "AI": {"tldr": "TrioXpert\u6846\u67b6\u5229\u7528\u591a\u6a21\u6001\u6570\u636e\u548c\u5927\u8bed\u8a00\u6a21\u578b\uff0c\u4e0d\u4ec5\u63d0\u5347\u4e86\u5fae\u670d\u52a1\u7cfb\u7edf\u4e2d\u5f02\u5e38\u68c0\u6d4b\u3001\u6545\u969c\u5206\u7c7b\u3001\u6839\u56e0\u5b9a\u4f4d\u7b49\u591a\u9879\u4efb\u52a1\u7684\u8868\u73b0\uff0c\u8fd8\u589e\u5f3a\u4e86\u65b9\u6cd5\u7684\u53ef\u89e3\u91ca\u6027\u3002", "motivation": "\u73b0\u6709\u81ea\u52a8\u5316\u4e8b\u4ef6\u7ba1\u7406\u65b9\u6cd5\u4e3b\u8981\u4f9d\u8d56\u5355\u4e00\u6a21\u6001\u6570\u636e\uff08\u5982\u6307\u6807\u3001\u65e5\u5fd7\u3001\u8ffd\u8e2a\u4fe1\u606f\uff09\uff0c\u4e14\u96be\u4ee5\u540c\u65f6\u652f\u6301\u5f02\u5e38\u68c0\u6d4b\u3001\u6545\u969c\u5206\u7c7b\u3001\u6839\u56e0\u5b9a\u4f4d\u7b49\u591a\u4efb\u52a1\u3002\u6b64\u5916\uff0c\u73b0\u6709\u65b9\u6cd5\u7f3a\u4e4f\u660e\u786e\u7684\u63a8\u7406\u8bc1\u636e\uff0c\u89e3\u91ca\u6027\u4e0d\u8db3\u3002", "method": "\u63d0\u51fa\u4e86TrioXpert\u6846\u67b6\uff0c\u80fd\u591f\u5145\u5206\u5229\u7528\u591a\u6a21\u6001\u6570\u636e\uff08\u6570\u503c\u548c\u6587\u672c\uff09\uff0c\u5206\u522b\u4e3a\u4e0d\u540c\u6a21\u6001\u8bbe\u8ba1\u72ec\u7acb\u6570\u636e\u5904\u7406\u6d41\u7a0b\uff0c\u5e76\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u534f\u4f5c\u63a8\u7406\uff0c\u652f\u6301\u591a\u4efb\u52a1\u5904\u7406\u7684\u540c\u65f6\u63d0\u5347\u53ef\u89e3\u91ca\u6027\u3002", "result": "\u5728\u4e24\u4e2a\u4e3b\u6d41\u5fae\u670d\u52a1\u7cfb\u7edf\u6570\u636e\u96c6\u4e0a\uff0cTrioXpert\u5728\u5f02\u5e38\u68c0\u6d4b\u3001\u6545\u969c\u5206\u7c7b\u3001\u6839\u56e0\u5b9a\u4f4d\u4e09\u9879\u4efb\u52a1\u4e0a\u5206\u522b\u63d0\u5347\u4e864.7%-57.7%\u30012.1%-40.6%\u30011.6%-163.1%\u7684\u6027\u80fd\u3002", "conclusion": "TrioXpert\u901a\u8fc7\u591a\u6a21\u6001\u6570\u636e\u878d\u5408\u4e0e\u5927\u8bed\u8a00\u6a21\u578b\u534f\u540c\u63a8\u7406\uff0c\u5b9e\u73b0\u4e86\u5fae\u670d\u52a1\u7cfb\u7edf\u4e8b\u4ef6\u7ba1\u7406\u7684\u591a\u4efb\u52a1\u9ad8\u6027\u80fd\u548c\u9ad8\u53ef\u89e3\u91ca\u6027\u3002"}}
{"id": "2506.10056", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10056", "abs": "https://arxiv.org/abs/2506.10056", "authors": ["Gabriel Orlanski", "Nicholas Roberts", "Aws Albarghouthi", "Frederic Sala"], "title": "Reward Models Enable Scalable Code Verification by Trading Accuracy for Throughput", "comment": "29 pages, 6 figures, code released here:\n  https://github.com/SprocketLab/orm-code-verifier", "summary": "The standard paradigm for solving coding tasks via large language models\n(LLMs) is to generate-then-rank programs, where the latter step uses a verifier\nin the ranking process. The growing consensus is that a comprehensive verifier\n(e.g., a full test suite) should be prioritized over an outcome reward model\n(ORM) whenever possible, with little consideration given to the trade-offs\ninvolved. We aim to challenge this assumption by systematically exploring the\ntradeoff between speed and accuracy. We find that ORMs play a crucial role in\nscaling verification through trading accuracy for speed, even when a\ncomprehensive verifier is available. Their value becomes especially apparent\nwhen used in a generate-prune-then-rank approach, where a faster but less\naccurate verifier removes incorrect solutions prior to ranking -- leading to a\nsystem that is 11.65x faster while only being 8.33% less accurate than the full\ntest suite. We analyze the generate-prune-then-rank approach and show that it\nworks by filtering out incorrect but highly ranked solutions. These findings\nenable the design of scalable and accurate program ranking systems.", "AI": {"tldr": "\u672c\u8bba\u6587\u63d0\u51fa\u5728\u5927\u578b\u8bed\u8a00\u6a21\u578b\u4ee3\u7801\u751f\u6210\u4efb\u52a1\u4e2d\uff0c\u7ed3\u5408\u901f\u5ea6\u5feb\u4f46\u51c6\u786e\u7387\u4f4e\u7684ORM\u548c\u5b8c\u6574\u9a8c\u8bc1\u5668\u7684\u751f\u6210-\u526a\u679d-\u518d\u6392\u5e8f\u6d41\u7a0b\uff0c\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u9a8c\u8bc1\u901f\u5ea6\uff0c\u51c6\u786e\u7387\u635f\u5931\u5f88\u5c0f\uff0c\u6709\u52a9\u4e8e\u6784\u5efa\u53ef\u6269\u5c55\u4e14\u7cbe\u51c6\u7684\u7a0b\u5e8f\u6392\u5e8f\u7cfb\u7edf\u3002", "motivation": "\u5f53\u524d\u4e3b\u6d41\u89c2\u70b9\u8ba4\u4e3a\u7efc\u5408\u6027\u9a8c\u8bc1\u5668\uff08\u5982\u5b8c\u6574\u6d4b\u8bd5\u96c6\uff09\u4f18\u5148\u4e8eORM\uff0c\u4f46\u5f88\u5c11\u5173\u6ce8\u76f8\u5173\u7684\u6743\u8861\u3002\u672c\u6587\u65e8\u5728\u6311\u6218\u8fd9\u79cd\u5047\u8bbe\uff0c\u63a2\u7d22\u901f\u5ea6\u548c\u51c6\u786e\u7387\u7684\u53d6\u820d\u3002", "method": "\u7cfb\u7edf\u5730\u7814\u7a76\u4e86\u901f\u5ea6\u548c\u51c6\u786e\u6027\u4e4b\u95f4\u7684\u6743\u8861\uff0c\u901a\u8fc7\u5f15\u5165\u751f\u6210-\u526a\u679d-\u518d\u6392\u5e8f\u7684\u6d41\u7a0b\uff0c\u5148\u7528\u901f\u5ea6\u8f83\u5feb\u4f46\u51c6\u786e\u7387\u8f83\u4f4e\u7684\u9a8c\u8bc1\u5668\u79fb\u9664\u9519\u8bef\u89e3\uff0c\u7136\u540e\u518d\u6392\u5e8f\u3002", "result": "\u901a\u8fc7\u751f\u6210-\u526a\u679d-\u518d\u6392\u5e8f\u65b9\u6cd5\uff0c\u80fd\u591f\u5b9e\u73b011.65\u500d\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u540c\u65f6\u51c6\u786e\u7387\u4ec5\u4e0b\u964d8.33%\u3002\u5206\u6790\u663e\u793a\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u5254\u9664\u9ad8\u6392\u540d\u4f46\u9519\u8bef\u7684\u89e3\uff0c\u63d0\u9ad8\u6392\u5e8f\u7cfb\u7edf\u7684\u89c4\u6a21\u5316\u548c\u51c6\u786e\u6027\u3002", "conclusion": "ORM\uff08Outcome Reward Model\uff09\u5728\u4ee3\u7801\u4efb\u52a1\u7684\u9a8c\u8bc1\u9636\u6bb5\uff0c\u5373\u4f7f\u6709\u5b8c\u6574\u6d4b\u8bd5\u96c6\uff0c\u4ecd\u7136\u901a\u8fc7\u901f\u5ea6\u4e0e\u51c6\u786e\u7387\u7684\u6743\u8861\u5b9e\u73b0\u4e86\u89c4\u6a21\u5316\u9a8c\u8bc1\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u6548\u7387\u800c\u635f\u5931\u8f83\u5c0f\u7684\u51c6\u786e\u7387\u3002"}}
{"id": "2506.10049", "categories": ["cs.SE", "cs.LG"], "pdf": "https://arxiv.org/pdf/2506.10049", "abs": "https://arxiv.org/abs/2506.10049", "authors": ["Francesco Vinci", "Gyunam Park", "Wil van der Aalst", "Massimiliano de Leoni"], "title": "Online Discovery of Simulation Models for Evolving Business Processes (Extended Version)", "comment": null, "summary": "Business Process Simulation (BPS) refers to techniques designed to replicate\nthe dynamic behavior of a business process. Many approaches have been proposed\nto automatically discover simulation models from historical event logs,\nreducing the cost and time to manually design them. However, in dynamic\nbusiness environments, organizations continuously refine their processes to\nenhance efficiency, reduce costs, and improve customer satisfaction. Existing\ntechniques to process simulation discovery lack adaptability to real-time\noperational changes. In this paper, we propose a streaming process simulation\ndiscovery technique that integrates Incremental Process Discovery with Online\nMachine Learning methods. This technique prioritizes recent data while\npreserving historical information, ensuring adaptation to evolving process\ndynamics. Experiments conducted on four different event logs demonstrate the\nimportance in simulation of giving more weight to recent data while retaining\nhistorical knowledge. Our technique not only produces more stable simulations\nbut also exhibits robustness in handling concept drift, as highlighted in one\nof the use cases.", "AI": {"tldr": "\u9488\u5bf9\u73b0\u6709\u6d41\u7a0b\u4eff\u771f\u6a21\u578b\u53d1\u73b0\u65b9\u6cd5\u96be\u4ee5\u5b9e\u65f6\u9002\u5e94\u4e1a\u52a1\u53d8\u52a8\u7684\u95ee\u9898\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u7ed3\u5408\u589e\u91cf\u6d41\u7a0b\u53d1\u73b0\u548c\u5728\u7ebf\u673a\u5668\u5b66\u4e60\u7684\u6280\u672f\uff0c\u5b9e\u73b0\u4e86\u5bf9\u6d41\u7a0b\u52a8\u6001\u7684\u5feb\u901f\u9002\u5e94\uff0c\u5e76\u9a8c\u8bc1\u4e86\u5176\u5728\u7a33\u5b9a\u6027\u4e0e\u6982\u5ff5\u6f02\u79fb\u5904\u7406\u65b9\u9762\u7684\u4f18\u52bf\u3002", "motivation": "\u73b0\u6709\u7684\u4e1a\u52a1\u6d41\u7a0b\u4eff\u771f\u6a21\u578b\u81ea\u52a8\u53d1\u73b0\u65b9\u6cd5\u5bf9\u5b9e\u65f6\u73af\u5883\u7684\u9002\u5e94\u80fd\u529b\u4e0d\u8db3\u3002\u968f\u7740\u4e1a\u52a1\u73af\u5883\u7684\u5feb\u901f\u53d8\u5316\uff0c\u4f01\u4e1a\u9700\u8981\u4eff\u771f\u7cfb\u7edf\u80fd\u591f\u53ca\u65f6\u53cd\u6620\u6d41\u7a0b\u53d8\u5316\u4ee5\u63d0\u9ad8\u6548\u7387\u3001\u964d\u4f4e\u6210\u672c\u3001\u63d0\u5347\u5ba2\u6237\u6ee1\u610f\u5ea6\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u589e\u91cf\u6d41\u7a0b\u53d1\u73b0\u4e0e\u5728\u7ebf\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u5b9e\u65f6\u4ece\u6570\u636e\u6d41\u4e2d\u83b7\u53d6\u5e76\u66f4\u65b0\u4eff\u771f\u6a21\u578b\u3002\u8be5\u6280\u672f\u5728\u4f18\u5148\u8003\u8651\u6700\u65b0\u6570\u636e\u5f71\u54cd\u7684\u540c\u65f6\uff0c\u4fdd\u7559\u4e86\u5386\u53f2\u6570\u636e\u7684\u4fe1\u606f\uff0c\u5b9e\u73b0\u5bf9\u6d41\u7a0b\u52a8\u6001\u53d8\u5316\u7684\u6301\u7eed\u9002\u5e94\u3002", "result": "\u901a\u8fc7\u5bf9\u56db\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u65e5\u5fd7\u7684\u5b9e\u9a8c\uff0c\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u5bf9\u6700\u8fd1\u6570\u636e\u8d4b\u4e88\u66f4\u9ad8\u6743\u91cd\u540c\u65f6\u4fdd\u6301\u5386\u53f2\u4fe1\u606f\u7684\u4f18\u52bf\u3002\u8be5\u65b9\u6cd5\u80fd\u591f\u751f\u6210\u66f4\u7a33\u5b9a\u7684\u4eff\u771f\u7ed3\u679c\uff0c\u5e76\u4e14\u5728\u5904\u7406\u6982\u5ff5\u6f02\u79fb\u8fc7\u7a0b\u4e2d\u8868\u73b0\u51fa\u66f4\u5f3a\u7684\u9c81\u68d2\u6027\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u6d41\u5f0f\u4eff\u771f\u6a21\u578b\u81ea\u52a8\u53d1\u73b0\u65b9\u6cd5\u80fd\u591f\u66f4\u597d\u5730\u9002\u5e94\u4e1a\u52a1\u73af\u5883\u7684\u5b9e\u65f6\u53d8\u5316\uff0c\u517c\u987e\u65b0\u65e7\u6570\u636e\uff0c\u63d0\u5347\u4e86\u4eff\u771f\u7684\u7a33\u5b9a\u6027\u548c\u9c81\u68d2\u6027\u3002"}}
{"id": "2506.10803", "categories": ["cs.SE", "cs.PL"], "pdf": "https://arxiv.org/pdf/2506.10803", "abs": "https://arxiv.org/abs/2506.10803", "authors": ["Ryan Gibb", "Patrick Ferris", "David Allsopp", "Michael Winston Dales", "Mark Elvers", "Thomas Gazagnaire", "Sadiq Jaffer", "Thomas Leonard", "Jon Ludlam", "Anil Madhavapeddy"], "title": "Solving Package Management via Hypergraph Dependency Resolution", "comment": "Submitted to SPLASH 2025", "summary": "Package managers are everywhere, with seemingly every language and operating\nsystem implementing their own solution. The lack of interoperability between\nthese systems means that multi-lingual projects are unable to express precise\ndependencies across language ecosystems, and external system and hardware\ndependencies are typically implicit and unversioned. We define HyperRes, a\nformal system for describing versioned dependency resolution using a hypergraph\nthat is expressive enough to model many ecosystems and solve dependency\nconstraints across them. We define translations from dozens of existing package\nmanagers to HyperRes and comprehensively demonstrate that dependency resolution\ncan work across ecosystems that are currently distinct. This does not require\nusers to shift their choice of package managers; instead, HyperRes allows for\nthe translation of packaging metadata between ecosystems, and for solving to be\nprecisely specialised to a particular deployment environment.", "AI": {"tldr": "HyperRes\u901a\u8fc7\u8d85\u56fe\u6a21\u578b\u5b9e\u73b0\u4e0d\u540c\u5305\u7ba1\u7406\u5668\u8de8\u751f\u6001\u7cfb\u7edf\u7684\u4f9d\u8d56\u89e3\u6790\uff0c\u65e0\u9700\u66f4\u6362\u73b0\u6709\u5de5\u5177\uff0c\u4fc3\u8fdb\u5305\u7ba1\u7406\u5668\u4e92\u64cd\u4f5c\u548c\u4f9d\u8d56\u7cbe\u786e\u7ba1\u7406\u3002", "motivation": "\u76ee\u524d\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u64cd\u4f5c\u7cfb\u7edf\u90fd\u62e5\u6709\u5404\u81ea\u7684\u5305\u7ba1\u7406\u5668\uff0c\u4f46\u5f7c\u6b64\u4e4b\u95f4\u7f3a\u4e4f\u4e92\u64cd\u4f5c\u6027\uff0c\u591a\u8bed\u79cd\u9879\u76ee\u96be\u4ee5\u8de8\u751f\u6001\u7cfb\u7edf\u7cbe\u786e\u8868\u8fbe\u4f9d\u8d56\u5173\u7cfb\uff0c\u5916\u90e8\u7cfb\u7edf\u548c\u786c\u4ef6\u4f9d\u8d56\u4e5f\u65e0\u6cd5\u660e\u786e\u3001\u7248\u672c\u5316\u5730\u6307\u5b9a\u3002", "method": "\u4f5c\u8005\u63d0\u51fa\u4e86HyperRes\uff0c\u4e00\u4e2a\u57fa\u4e8e\u8d85\u56fe\u7684\u5f62\u5f0f\u5316\u7cfb\u7edf\uff0c\u7528\u4e8e\u63cf\u8ff0\u7248\u672c\u5316\u4f9d\u8d56\u89e3\u6790\u3002HyperRes\u80fd\u591f\u8868\u8fbe\u591a\u79cd\u73b0\u6709\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u89e3\u51b3\u8de8\u751f\u6001\u7684\u4f9d\u8d56\u7ea6\u675f\u3002\u540c\u65f6\uff0c\u4f5c\u8005\u5c06\u51e0\u5341\u79cd\u73b0\u6709\u5305\u7ba1\u7406\u5668\u7684\u4f9d\u8d56\u5173\u7cfb\u7ffb\u8bd1\u5230HyperRes\u4e2d\u8fdb\u884c\u7edf\u4e00\u5efa\u6a21\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cHyperRes\u53ef\u4ee5\u5b9e\u73b0\u5f53\u524d\u5404\u81ea\u72ec\u7acb\u7684\u5305\u7ba1\u7406\u5668\u751f\u6001\u7cfb\u7edf\u95f4\u7684\u4f9d\u8d56\u89e3\u6790\uff0c\u4e0d\u9700\u8981\u7528\u6237\u66f4\u6362\u5305\u7ba1\u7406\u5668\uff0c\u5e76\u80fd\u9488\u5bf9\u7279\u5b9a\u90e8\u7f72\u73af\u5883\u7cbe\u786e\u5b9a\u5236\u4f9d\u8d56\u6c42\u89e3\u3002", "conclusion": "HyperRes\u4e3a\u7248\u672c\u5316\u4f9d\u8d56\u89e3\u6790\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u3001\u5f3a\u5927\u4e14\u53ef\u6269\u5c55\u7684\u5f62\u5f0f\u5316\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e86\u5305\u7ba1\u7406\u5668\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u548c\u7cbe\u7ec6\u5316\u4f9d\u8d56\u7ba1\u7406\u3002"}}
{"id": "2506.10051", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2506.10051", "abs": "https://arxiv.org/abs/2506.10051", "authors": ["Md Istiak Hossain Shihab", "Christopher Hundhausen", "Ahsun Tariq", "Summit Haque", "Yunhan Qiao", "Brian Mulanda"], "title": "The Effects of GitHub Copilot on Computing Students' Programming Effectiveness, Efficiency, and Processes in Brownfield Programming Tasks", "comment": "14 pages, 5 figures", "summary": "When graduates of computing degree programs enter the software industry, they\nwill most likely join teams working on legacy code bases developed by people\nother than themselves. In these so-called brownfield software development\nsettings, generative artificial intelligence (GenAI) coding assistants like\nGitHub Copilot are rapidly transforming software development practices, yet the\nimpact of GenAI on student programmers performing brownfield development tasks\nremains underexplored. This paper investigates how GitHub Copilot influences\nundergraduate students' programming performance, behaviors, and understanding\nwhen completing brownfield programming tasks in which they add new code to an\nunfamiliar code base. We conducted a controlled experiment in which 10\nundergraduate computer science students completed highly similar brownfield\ndevelopment tasks with and without Copilot in a legacy web application. Using a\nmixed-methods approach combining performance analysis, behavioral analysis, and\nexit interviews, we found that students completed tasks 35% faster (p < 0.05)\nand made 50% more solution progress p (< 0.05) when using Copilot. Moreover,\nour analysis revealed that, when using Copilot, students spent 11% less time\nmanually writing code (p < 0.05), and 12% less time conducting web searches (p\n< 0.05), providing evidence of a fundamental shift in how they engaged in\nprogramming. In exit interviews, students reported concerns about not\nunderstanding how or why Copilot suggestions work. This research suggests the\nneed for computing educators to develop new pedagogical approaches that\nleverage GenAI assistants' benefits while fostering reflection on how and why\nGenAI suggestions address brownfield programming tasks. Complete study results\nand analysis are presented at https://ghcopilot-icer.github.io/.", "AI": {"tldr": "\u4f7f\u7528GitHub Copilot\u7b49\u751f\u6210\u5f0fAI\u52a9\u624b\u80fd\u5e2e\u52a9\u5b66\u751f\u63d0\u9ad8\u65e7\u9879\u76ee\u5f00\u53d1\u6548\u7387\u3001\u51cf\u5c11\u624b\u52a8\u7f16\u7a0b\u548c\u8d44\u6599\u67e5\u627e\u65f6\u95f4\uff0c\u4f46\u5b66\u751f\u5bf9AI\u5efa\u8bae\u7684\u7406\u89e3\u4e0d\u8db3\uff0c\u6559\u80b2\u8005\u9700\u521b\u65b0\u6559\u5b66\u5e94\u5bf9\u3002", "motivation": "\u5728\u73b0\u4eca\u8f6f\u4ef6\u4ea7\u4e1a\u4e2d\uff0c\u6bd5\u4e1a\u751f\u5c06\u5927\u6982\u7387\u52a0\u5165\u5df2\u6709\u4ee3\u7801\u57fa\u7840\u3001\u7531\u4ed6\u4eba\u5f00\u53d1\u7684\u201cbrownfield\u201d\u9879\u76ee\u56e2\u961f\uff0c\u800c\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u80fd\uff08GenAI\uff09\u7f16\u7801\u52a9\u624b\u5982GitHub Copilot\u6b63\u5728\u8fc5\u901f\u6539\u53d8\u8f6f\u4ef6\u5f00\u53d1\u5b9e\u8df5\u3002\u4f46\u76ee\u524d\u5c1a\u4e0d\u6e05\u695aGenAI\u5bf9\u5b66\u751f\u7a0b\u5e8f\u5458\u5b8c\u6210brownfield\u5f00\u53d1\u4efb\u52a1\u7684\u5f71\u54cd\u3002", "method": "\u672c\u7814\u7a76\u8bbe\u8ba1\u4e86\u5bf9\u7167\u5b9e\u9a8c\uff0c\u8ba910\u540d\u672c\u79d1\u8ba1\u7b97\u673a\u4e13\u4e1a\u5b66\u751f\u5728\u9057\u7559Web\u5e94\u7528\u4e2d\uff0c\u5206\u522b\u5728\u6709Copilot\u548c\u65e0Copilot\u4e24\u79cd\u60c5\u51b5\u4e0b\u5b8c\u6210\u9ad8\u5ea6\u76f8\u4f3c\u7684brownfield\u5f00\u53d1\u4efb\u52a1\uff1b\u901a\u8fc7\u8868\u73b0\u5206\u6790\u3001\u884c\u4e3a\u5206\u6790\u548c\u8bbf\u8c08\u7684\u6df7\u5408\u65b9\u6cd5\u7814\u7a76\u5176\u5f71\u54cd\u3002", "result": "\u4f7f\u7528Copilot\u65f6\uff0c\u5b66\u751f\u5b8c\u6210\u4efb\u52a1\u901f\u5ea6\u63d0\u534735%\uff0c\u89e3\u51b3\u65b9\u6848\u8fdb\u5c55\u63d0\u534750%\uff0c\u624b\u52a8\u7f16\u7a0b\u65f6\u95f4\u964d\u4f4e11%\uff0c\u7f51\u7edc\u641c\u7d22\u65f6\u95f4\u51cf\u5c1112%\uff0c\u4ee5\u4e0a\u7ed3\u679c\u5747\u6709\u7edf\u8ba1\u5b66\u610f\u4e49\uff08p<0.05\uff09\uff1b\u4f46\u5b66\u751f\u5bf9Copilot\u5efa\u8bae\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u539f\u7406\u5b58\u5728\u4e0d\u7406\u89e3\u7684\u62c5\u5fe7\u3002", "conclusion": "GenAI\u52a9\u624b\uff08\u5982Copilot\uff09\u80fd\u663e\u8457\u63d0\u5347\u5b66\u751f\u5728brownfield\u5f00\u53d1\u4e2d\u7684\u6548\u7387\u548c\u8fdb\u5c55\uff0c\u540c\u65f6\u6539\u53d8\u5176\u7f16\u7a0b\u884c\u4e3a\u3002\u6559\u80b2\u8005\u6709\u5fc5\u8981\u63a2\u7d22\u878d\u5408GenAI\u52a9\u624b\u4f18\u52bf\u5e76\u63d0\u5347\u5b66\u751f\u5bf9\u5efa\u8bae\u7406\u89e3\u53ca\u53cd\u601d\u7684\u65b0\u6559\u5b66\u65b9\u6cd5\u3002"}}
